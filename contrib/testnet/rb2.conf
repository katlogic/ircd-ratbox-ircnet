serverinfo {
	name = "rb2.nfx.cz";
	use_ts6 = yes;
	sid = "42R2";
	description = "ircd-ratbox-ircnet test server";
	network_name = "IRCNet";
	network_desc = "Teh Original Internet Relay Chat";
	hub = yes;
	default_max_clients = 10000;
};

listen {
	port = 9998;
	host = "0.0.0.0";
};

/* connect {}: controls servers we connect to (OLD C:, N:, H:, L:) */
connect "in2.nfx.cz" {
	host = "127.0.0.1";
	send_password = "nasrat";
	accept_password = "nasrat";
	/* port: the port to connect to this server on */
	port = 6668;
	hub_mask = "*";
	class = "server";

	/* flags: controls special options for this server
	 * encrypted    - marks the accept_password as being crypt()'d
	 * autoconn     - automatically connect to this server
	 * compressed   - compress traffic via ziplinks
	 * topicburst   - burst topics between servers
	 */
	flags = autoconn;
};

connect "rb3.nfx.cz" {
	host = "127.0.0.1";
	send_password = "nasrat";
	accept_password = "nasrat";
	/* port: the port to connect to this server on */
	port = 9999;
	hub_mask = "*";
	class = "server";

	/* flags: controls special options for this server
	 * encrypted    - marks the accept_password as being crypt()'d
	 * autoconn     - automatically connect to this server
	 * compressed   - compress traffic via ziplinks
	 * topicburst   - burst topics between servers
	 */
	flags = autoconn;
};



/* admin {}: contains admin information about the server. (OLD A:) */
admin {
	name = "Smurf target";
	description = "Main Server Administrator";
	email = "<syn@packets.r.us>";
};

/* log {}: contains information about logfiles. */
log {
	/* logfiles: the logfiles to use for specific activity.  if these
	 * paths are defined, then ircd will log to them, otherwise it wont.
	 *
	 * The confs are, in order:
	 * - userlog:    user exits
	 * - fuserlog:   failed user connections
	 * - operlog:    /oper usage
	 * - foperlog:   failed /oper usage
	 * - serverlog:  server connects/disconnects
	 * - glinelog:   glines
	 * - klinelog:   klines, etc
	 * - killlog:    kills
	 * - operspylog: operspy usage
	 * - ioerrorlog: IO errors
	 */
	fname_userlog = "logs/userlog";
	#fname_fuserlog = "logs/fuserlog";
	fname_operlog = "logs/operlog";
	#fname_foperlog = "logs/foperlog";
	fname_serverlog = "logs/serverlog";
	fname_glinelog = "logs/glinelog";
	#fname_klinelog = "logs/klinelog";
	fname_killlog = "logs/killlog";
	fname_operspylog = "logs/operspylog";
	#fname_ioerrorlog = "logs/ioerror";
};

/* class {}: contain information about classes for users (OLD Y:) */
class "users" {
	ping_time = 2 minutes;
	number_per_ident = 2;
	number_per_ip = 3;
	number_per_ip_global = 5;
	cidr_bitlen = 64;
	number_per_cidr = 4;
	max_number = 100;
	sendq = 100 kbytes;
};

class "restricted" {
	ping_time = 1 minute 30 seconds;
	number_per_ip = 1;
	max_number = 100;
	sendq = 60kb;
};

class "opers" {
	ping_time = 5 minutes;
	number_per_ip = 10;
	max_number = 100;
	sendq = 100kbytes;
};

class "server" {
	ping_time = 5 minutes;
	connectfreq = 0 minutes;
	max_number = 5;
	sendq=2 megabytes;
};


auth {
	user = "*@*";
	class = "users";
};

operator "sd" {
	user = "*@127.0.0.1";
	password = "nasrat";
	flags = global_kill, remote, kline, unkline, gline,
		die, rehash, admin, xline, operwall, ~encrypted;
};

shared {
	oper = "*@*";
	flags = tkline;
};

/* The channel block contains options pertaining to channels */
channel {
	delay = 30;
	reop = 1;
	use_invex = yes;
	use_except = yes;
	use_knock = yes;
	invite_ops_only = yes;
	knock_delay = 5 minutes;
	knock_delay_channel = 1 minute;
	max_chans_per_user = 15;
	quiet_on_ban = yes;
	max_bans = 25;
	default_split_user_count = 0;
	default_split_server_count = 0;
	no_create_on_split = no;
	no_join_on_split = no;
	burst_topicwho = yes;
};


/* The serverhide block contains the options regarding serverhiding */
serverhide {
	flatten_links = no;
	links_delay = 5 minutes;
	hidden = no;
	disable_hidden = no;
};
general {
        throttle_count = 9999;
	collision_fnc = yes;
	hide_error_messages = opers;
	hide_spoof_ips = yes;
	default_invisible = no;
	default_operstring = "is an IRC Operator";
	default_adminstring = "is a Server Administrator";
	tkline_expire_notices = no;
	default_floodcount = 10;
	disable_fake_channels = no;
	failed_oper_notice = yes;
	dots_in_ident=2;
	dot_in_ip6_addr = no;
	min_nonwildcard = 4;
	min_nonwildcard_simple = 3;
	max_accept = 20;
	max_monitor = 100;
	anti_nick_flood = yes;
	max_nick_time = 20 seconds;
	max_nick_changes = 5;
	anti_spam_exit_message_time = 5 minutes;
	ts_warn_delta = 30 seconds;
	ts_max_delta = 5 minutes;
	client_exit = yes;
	dline_with_reason = yes;
	kline_delay = 0 seconds;
	kline_with_reason = yes;
	kline_reason = "Connection closed";
	non_redundant_klines = yes;
	warn_no_nline = yes;
	stats_e_disabled = no;
	stats_c_oper_only=no;
	/* stats h oper only: make stats h (hub_mask/leaf_mask) oper only */
	stats_h_oper_only=no;
	/* stats y oper only: make stats y (class {}) oper only */
	stats_y_oper_only=no;
	/* stats o oper only: make stats o (opers) oper only */
	stats_o_oper_only=yes;
	stats_P_oper_only=no;
	stats_i_oper_only=masked;
	stats_k_oper_only=masked;
	map_oper_only = no;
	operspy_admin_only = no;
	caller_id_wait = 1 minute;
	pace_wait_simple = 1 second;
	pace_wait = 10 seconds;
	short_motd = no;
	ping_cookie = no;
	connect_timeout = 30 seconds;
	disable_auth = no;
	no_oper_flood = yes;
	glines = yes;
	gline_time = 1 day;
	gline_min_cidr = 16;
	idletime = 0;
	max_targets = 4;
	client_flood = 20;
	use_whois_actually = yes;

	/* usermodes configurable: a list of usermodes for the options below
	 *
	 * +b - bots       - See bot and drone flooding notices
	 * +c - cconn      - Client connection/quit notices
	 * +C - cconnext   - Extended client connection/quit notices
	 * +d - debug      - See debugging notices
	 * +f - full       - See I: line full notices
	 * +g - callerid   - Server Side Ignore
	 * +i - invisible  - Not shown in NAMES or WHO unless you share a
	 *                   a channel
	 * +k - skill      - See server generated KILL messages
	 * +l - locops     - See LOCOPS messages
	 * +n - nchange    - See client nick changes
	 * +r - rej        - See rejected client notices
	 * +s - servnotice - See general server notices
	 * +u - unauth     - See unauthorised client notices
	 * +w - wallop     - See server generated WALLOPS
	 * +x - external   - See remote server connection and split notices
	 * +y - spy        - See LINKS, STATS, TRACE notices etc.
	 * +z - operwall   - See oper generated WALLOPS
	 * +Z - operspy    - See operspy notices
	 */

	/* oper only umodes: usermodes only opers may set */
	oper_only_umodes = bots, cconn, debug, full, skill, nchange,
		rej, spy, external, operwall, locops, unauth;

	/* oper umodes: default usermodes opers get when they /oper */
	oper_umodes = locops, servnotice, operwall, wallop;

	#compression_level = 6;

	/* burst_away: This enables bursting away messages to servers.
	 * With this disabled, we will only propogate AWAY messages
	 * as users send them, but never burst them.  Be warned though
	 * enabling this could increase the size of a burst significantly
	 * for a large network, like EFnet.
	 */
	burst_away = yes;
	reject_ban_time = 1 minute;
	reject_after_count = 3;
	reject_duration = 5 minutes;
	max_unknown_ip = 2;
};

modules {
	path = "/usr/local/ircd/modules";
	path = "/usr/local/ircd/modules/autoload";

	/* module: the name of a module to load on startup/rehash */
	#module = "some_module.so";
};
